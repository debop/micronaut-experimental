buildscript {

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.4"
    }
}

plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE" apply false
}

allprojects {

    group = "$artifactGroupId"
    version = "$artifactVersion" + "$snapshot"

    repositories {
        mavenCentral()
        jcenter()
    }
}

subprojects {

    apply plugin: "kotlin"
    apply plugin: "kotlin-kapt"

    apply plugin: "io.spring.dependency-management"


    dependencyManagement {
        imports {
            mavenBom 'io.micronaut:micronaut-bom:1.0.1'
        }

        dependencies {
            dependency "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
            dependency "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
            dependency "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
            dependency "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
            dependency "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"

            dependency "io.github.microutils:kotlin-logging:1.6.22"
            dependency "ch.qos.logback:logback-classic:1.2.3"
        }
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        compile "org.jetbrains.kotlin:kotlin-reflect"
        testCompile "org.jetbrains.kotlin:kotlin-test"

        annotationProcessor "io.micronaut:micronaut-inject-java"

        compile "io.micronaut:micronaut-http-client"
        compile "io.micronaut:micronaut-http-server-netty"
        compile "io.micronaut:micronaut-inject"
        compile "io.micronaut:micronaut-runtime"
        compileOnly "io.micronaut:micronaut-inject-java"

        kapt "io.micronaut:micronaut-inject-java"
        kaptTest "io.micronaut:micronaut-inject-java"

        testCompile "io.micronaut:micronaut-inject-java"

        compile "io.github.microutils:kotlin-logging"
        compile "org.slf4j:slf4j-api:1.7.25"
        runtime "ch.qos.logback:logback-classic"

        testCompile "org.junit.jupiter:junit-jupiter-api:5.3.2"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.3.2"
    }

    test {
        useJUnitPlatform()
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = '1.8'
            javaParameters = true
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = '1.8'
            javaParameters = true
        }
    }
}